diff --git a/bin/ebuild.sh b/bin/ebuild.sh
index cfcf6eba3..c019f342c 100755
--- a/bin/ebuild.sh
+++ b/bin/ebuild.sh
@@ -1,4 +1,5 @@
 #!/bin/bash
+echo '@@@@ RUNNING ebuild.sh'
 # Copyright 1999-2018 Gentoo Foundation
 # Distributed under the terms of the GNU General Public License v2
 
@@ -12,6 +13,9 @@ declare -F ___in_portage_iuse >/dev/null && export -n -f ___in_portage_iuse
 
 source "${PORTAGE_BIN_PATH}/isolated-functions.sh" || exit 1
 
+FUSEBOX_ACL_FILE="/fuseboxctlv1/acl"
+FUSEBOX_ACL_SWITCH_FILE="/fuseboxctlv1/acl_switch"
+
 # Set up the bash version compatibility level.  This does not disable
 # features when running with a newer version, but makes it so that when
 # bash changes behavior in an incompatible way, the older behavior is
@@ -153,6 +157,11 @@ __sb_append_var() {
 	local var="SANDBOX_${_v}"
 	[[ -z $1 || -n $2 ]] && die "Usage: add$(LC_ALL=C tr "[:upper:]" "[:lower:]" <<< "${_v}") <colon-delimited list of paths>"
 	export ${var}="${!var:+${!var}:}$1"
+	IFS=':' read -ra paths <<< "$1"
+	for p in "${paths[@]}"; do
+		echo "@@@@ Fusebox: Update ACL: add${_v} $p"
+		echo "add${_v} $p" >> ${FUSEBOX_ACL_FILE}
+	done
 }
 # bash-4 version:
 # local var="SANDBOX_${1^^}"
@@ -162,6 +171,10 @@ addwrite()   { __sb_append_var WRITE   "$@" ; }
 adddeny()    { __sb_append_var DENY    "$@" ; }
 addpredict() { __sb_append_var PREDICT "$@" ; }
 
+# Avoid sandbox violations about controll files.
+export SANDBOX_WRITE="${SANDBOX_WRITE:+${SANDBOX_WRITE}:}/fuseboxctlv1"
+# Clear the fusebox ACL
+echo "clearall" >> ${FUSEBOX_ACL_FILE}
 addwrite "${PORTAGE_TMPDIR}/portage"
 addread "/:${PORTAGE_TMPDIR}/portage"
 [[ -n ${PORTAGE_GPG_DIR} ]] && addpredict "${PORTAGE_GPG_DIR}"
@@ -171,7 +184,8 @@ if [[ -w $T ]] ; then
 	export TEMP=$T
 	export TMP=$T
 	export TMPDIR=$T
-elif [[ $SANDBOX_ON = 1 ]] ; then
+#elif [[ $SANDBOX_ON = 1 ]] ; then
+elif [[ $(cat ${FUSEBOX_ACL_SWITCH_FILE}) = 1 ]] ; then
 	for x in TEMP TMP TMPDIR ; do
 		[[ -n ${!x} ]] && addwrite "${!x}"
 	done
@@ -180,6 +194,7 @@ fi
 
 # the sandbox is disabled by default except when overridden in the relevant stages
 export SANDBOX_ON=0
+echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 
 # Ensure that $PWD is sane whenever possible, to protect against
 # exploitation of insecure search path for python -c in ebuilds.
@@ -467,6 +482,7 @@ __try_source() {
 # === === === === === === === === === === === === === === === === === ===
 
 export SANDBOX_ON="1"
+echo 1 > ${FUSEBOX_ACL_SWITCH_FILE}
 export S=${WORKDIR}/${P}
 
 # Turn of extended glob matching so that g++ doesn't get incorrectly matched.
@@ -540,6 +556,7 @@ if ! has "$EBUILD_PHASE" clean cleanrm depend && \
 	done
 	PORTAGE_SANDBOX_ON=${SANDBOX_ON}
 	export SANDBOX_ON=1
+	echo 1 > ${FUSEBOX_ACL_SWITCH_FILE}
 	source "${T}"/environment || \
 		die "error sourcing environment"
 	# We have to temporarily disable sandbox since the
@@ -547,6 +564,7 @@ if ! has "$EBUILD_PHASE" clean cleanrm depend && \
 	# may be unusable (triggering in spurious sandbox violations)
 	# until we've merged them with our current values.
 	export SANDBOX_ON=0
+	echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 	for x in SANDBOX_DENY SANDBOX_PREDICT SANDBOX_READ SANDBOX_WRITE ; do
 		y="PORTAGE_${x}"
 		if [ -z "${!x}" ] ; then
@@ -561,6 +579,7 @@ if ! has "$EBUILD_PHASE" clean cleanrm depend && \
 	done
 	unset x y
 	export SANDBOX_ON=${PORTAGE_SANDBOX_ON}
+	echo ${SANDBOX_ON} > ${FUSEBOX_ACL_SWITCH_FILE}
 	unset PORTAGE_SANDBOX_ON
 	[[ -n $EAPI ]] || EAPI=0
 fi
@@ -700,6 +719,7 @@ fi
 
 if [[ $EBUILD_PHASE = depend ]] ; then
 	export SANDBOX_ON="0"
+	echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 	set -f
 
 	if [ -n "${dbkey}" ] ; then
diff --git a/bin/phase-functions.sh b/bin/phase-functions.sh
index 90e622e75..835e0e336 100644
--- a/bin/phase-functions.sh
+++ b/bin/phase-functions.sh
@@ -1,4 +1,5 @@
 #!/bin/bash
+echo '@@@@ RUNNING phase-functions.sh'
 # Copyright 1999-2019 Gentoo Authors
 # Distributed under the terms of the GNU General Public License v2
 
@@ -41,6 +42,8 @@ PORTAGE_SAVED_READONLY_VARS="A CATEGORY P PF PN PR PV PVR"
 # it is saved or loaded (any mutations do not persist).
 PORTAGE_MUTABLE_FILTERED_VARS="AA HOSTNAME"
 
+FUSEBOX_ACL_SWITCH_FILE="/fuseboxctlv1/acl_switch"
+
 # @FUNCTION: __filter_readonly_variables
 # @DESCRIPTION: [--filter-sandbox] [--allow-extra-vars]
 # Read an environment from stdin and echo to stdout while filtering variables
@@ -176,12 +179,14 @@ __preprocess_ebuild_env() {
 	# filtered out above.
 	(
 		export SANDBOX_ON=1
+		echo 1 > ${FUSEBOX_ACL_SWITCH_FILE}
 		source "${T}/environment" || exit $?
 		# We have to temporarily disable sandbox since the
 		# SANDBOX_{DENY,READ,PREDICT,WRITE} values we've just loaded
 		# may be unusable (triggering in spurious sandbox violations)
 		# until we've merged them with our current values.
 		export SANDBOX_ON=0
+		echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 
 		# It's remotely possible that __save_ebuild_env() has been overridden
 		# by the above source command. To protect ourselves, we override it
@@ -949,6 +954,7 @@ __ebuild_main() {
 		if [[ -n $SANDBOX_ON ]] ; then
 			x=$SANDBOX_ON
 			export SANDBOX_ON=0
+			echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 		fi
 
 		rm -f "$SANDBOX_LOG" || \
@@ -956,6 +962,7 @@ __ebuild_main() {
 
 		if [[ -n $x ]] ; then
 			export SANDBOX_ON=$x
+			echo $x > ${FUSEBOX_ACL_SWITCH_FILE}
 		fi
 		unset x
 	fi
@@ -979,6 +986,7 @@ __ebuild_main() {
 			ewarn  "pkg_${1}() is not defined: '${EBUILD##*/}'"
 		fi
 		export SANDBOX_ON="0"
+		echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 		if [ "${PORTAGE_DEBUG}" != "1" ] || [ "${-/x/}" != "$-" ]; then
 			__ebuild_phase_with_hooks pkg_${1}
 		else
@@ -1001,8 +1009,10 @@ __ebuild_main() {
 	unpack|prepare|configure|compile|test|clean|install)
 		if [[ ${SANDBOX_DISABLED:-0} = 0 ]] ; then
 			export SANDBOX_ON="1"
+			echo 1 > ${FUSEBOX_ACL_SWITCH_FILE}
 		else
 			export SANDBOX_ON="0"
+			echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 		fi
 
 		case "${1}" in
@@ -1054,12 +1064,14 @@ __ebuild_main() {
 			set +x
 		fi
 		export SANDBOX_ON="0"
+		echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 		;;
 	help|pretend|setup)
 		#pkg_setup needs to be out of the sandbox for tmp file creation;
 		#for example, awking and piping a file in /tmp requires a temp file to be created
 		#in /etc.  If pkg_setup is in the sandbox, both our lilo and apache ebuilds break.
 		export SANDBOX_ON="0"
+		echo 0 > ${FUSEBOX_ACL_SWITCH_FILE}
 		if [ "${PORTAGE_DEBUG}" != "1" ] || [ "${-/x/}" != "$-" ]; then
 			__dyn_${1}
 		else
@@ -1072,6 +1084,7 @@ __ebuild_main() {
 		;;
 	*)
 		export SANDBOX_ON="1"
+		echo 1 > ${FUSEBOX_ACL_SWITCH_FILE}
 		echo "Unrecognized arg '${1}'"
 		echo
 		__dyn_help
